{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/TableHeaders.js","components/EmployeeOrder.js","components/EmployeeList.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","SearchBar","props","onSubmit","e","preventDefault","style","width","onChange","handleSearch","name","type","placeholder","TableHeaders","faArrow","order","onClick","handleBtnClick","sortBy","EmployeeOrder","sortOrder","employeeList","sort","a","b","first","last","location","city","phone","email","map","employee","key","src","picture","medium","alt","EmployeeList","state","search","query","employees","event","target","setState","axios","get","console","log","this","data","results","length","filter","toLowerCase","includes","maxWidth","searchList","React","Component","App","useState","setQuery","value","trim","Boolean","window","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd04c678.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"mainHeader\">\r\n      <h1 id=\"header\">Employee Directory</h1>\r\n      <h2 id=\"headerBody\">Employee Search - Click on column headers to sort.</h2>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <nav className=\"navbar bg-primary d-flex justify-content-center\" onSubmit={e => e.preventDefault()}>\r\n      <form className=\"form-inline position-relative\" >\r\n        <input className=\"form-control\"\r\n          style={{ width: \"600px\" }}\r\n          onChange={props.handleSearch}\r\n          name=\"search\"\r\n          type=\"search\"\r\n          placeholder=\"Search Employee\"\r\n        />\r\n      </form>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nfunction TableHeaders(props) {\r\n    let faArrow = props.order === \"descending\" ? \"fas fa-angle-down\" : \"fas fa-angle-up\";\r\n    return (\r\n        <div>\r\n            <div className=\"row d-flex align-items-center tableHeader\">\r\n                <div className=\"col-md-1\"></div>\r\n                <button className=\"btn btn-sm col-md-1 fas fa-sort\" onClick={props.handleBtnClick} name=\"fName\">First Name <i className={props.sortBy === \"fName\" ? faArrow : \"\"}></i></button>\r\n                <button className=\"btn btn-sm col-md-1 fas fa-sort\" onClick={props.handleBtnClick} name=\"lName\">Last Name <i className={props.sortBy === \"lName\" ? faArrow : \"\"}></i></button>\r\n                <button className=\"btn btn-sm col-md-1 fas fa-sort\" onClick={props.handleBtnClick} name=\"city\">City <i className={props.sortBy === \"city\" ? faArrow : \"\"}></i></button>\r\n                <button className=\"btn btn-sm col-md-3 fas fa-sort\" onClick={props.handleBtnClick} name=\"phoneNum\">Phone <i className={props.sortBy === \"phoneNum\" ? faArrow : \"\"}></i></button>\r\n                <button className=\"btn btn-sm col-md-2 fas fa-sort\" onClick={props.handleBtnClick} name=\"email\">Email <i className={props.sortBy === \"email\" ? faArrow : \"\"}></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableHeaders;","import React from \"react\";\r\n\r\nfunction EmployeeOrder(props) {\r\n    let sortOrder = (props.order === \"descending\" ? 1 : -1)\r\n    let employeeList = props.employeeList\r\n    switch (props.sortBy) {\r\n        case (\"fName\"):\r\n            employeeList = employeeList.sort((a, b) => (a.name.first > b.name.first) ? sortOrder : -sortOrder);\r\n            break;\r\n        case (\"lName\"):\r\n            employeeList = employeeList.sort((a, b) => (a.name.last > b.name.last) ? sortOrder : -sortOrder);\r\n            break;\r\n        case (\"city\"):\r\n            employeeList = employeeList.sort((a, b) => (a.location.city > b.location.city) ? sortOrder : -sortOrder);\r\n            break;\r\n        case (\"phoneNum\"):\r\n            employeeList = employeeList.sort((a, b) => (a.phone > b.phone) ? sortOrder : -sortOrder);\r\n            break;\r\n        case (\"email\"):\r\n            employeeList = employeeList.sort((a, b) => (a.email > b.email) ? sortOrder : -sortOrder);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <div>\r\n            {employeeList.map(employee => (\r\n                <div className=\"row d-flex align-items-center\" key={employee.email}>\r\n                    <div className=\"col-md-1\"><img src={employee.picture.medium} alt=\"Emp Img\" /></div>\r\n                    <div className=\"col-md-1\">{employee.name.first}</div>\r\n                    <div className=\"col-md-1\">{employee.name.last}</div>\r\n                    <div className=\"col-md-2\">{employee.location.city}</div>\r\n                    <div className=\"col-md-2\">{employee.phone}</div>\r\n                    <div className=\"col-md-3\">{employee.email}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeOrder;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport TableHeaders from \"./TableHeaders\";\r\nimport EmployeeOrder from \"./EmployeeOrder\";\r\n\r\nclass EmployeeList extends React.Component {\r\n  state = {\r\n    sortBy: \"lName\",\r\n    order: \"descending\",\r\n    search: this.props.query,\r\n    employees: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const employeeList = await axios.get(\"https://randomuser.me/api/?results=50\");\r\n      console.log(employeeList);\r\n      this.setState({ employees: employeeList.data.results })\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    return {\r\n      search: props.query,\r\n    };\r\n  }\r\n\r\n  handleBtnClick = event => {\r\n    (this.state.sortBy !== event.target.name) || (this.state.order === \"ascending\") ? this.setState({ order: \"descending\" }) : this.setState({ order: \"ascending\" });\r\n\r\n    this.setState({ sortBy: event.target.name })\r\n  }\r\n\r\n  searchList() {\r\n    let employeeList = this.state.employees;\r\n    if (employeeList.length === 0) {\r\n      return employeeList;\r\n    } else if (this.state.search !== \"\") {\r\n      employeeList = employeeList.filter(employee => {\r\n        return (\r\n          employee.name.first.toLowerCase().includes(this.state.search.toLowerCase()) ||\r\n          employee.name.last.toLowerCase().includes(this.state.search.toLowerCase()) ||\r\n          employee.location.city.toLowerCase().includes(this.state.search.toLowerCase()) ||\r\n          employee.phone.includes(this.state.search) ||\r\n          employee.email.toLowerCase().includes(this.state.search.toLowerCase())\r\n        );\r\n      })\r\n    }\r\n    return employeeList;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" style={{maxWidth:\"1280px\"}}>\r\n        <TableHeaders\r\n          handleBtnClick={this.handleBtnClick}\r\n          sortBy={this.state.sortBy}\r\n          order={this.state.order} />\r\n        <EmployeeOrder\r\n          employeeList={this.searchList()}\r\n          sortBy={this.state.sortBy}\r\n          order={this.state.order} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EmployeeList;","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport SearchBar from './components/SearchBar';\nimport EmployeeList from './components/EmployeeList';\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n\n  function handleSearch (event) {\n    event.preventDefault();\n    setQuery(event.target.value.trim());\n  }\n\n  return (\n    <div>\n      <Header />\n      <SearchBar handleSearch={handleSearch}/>\n      <EmployeeList query={query} />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './App.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}